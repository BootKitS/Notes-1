{"meta":{"title":"及时行乐","subtitle":"","description":"","author":"Tuo","url":"https://csren.cc","root":"/"},"pages":[],"posts":[{"title":"certificate","slug":"certificate","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/certificate/","link":"","permalink":"https://csren.cc/2020/08/02/certificate/","excerpt":"","text":"系统安装 CA 证书 链接 chrome 无法信任 链接 Centos7 信任证书 拷贝证书到目录 /etc/pki/ca-trust/source/anchors/ 然后执行 update-ca-trust Python 中使用 requests 访问自签名网站时出现错误 链接1 链接2 使用 openssl 创建 CA 证书和自签名证书 链接","categories":[],"tags":[]},{"title":"docker","slug":"docker","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/docker/","link":"","permalink":"https://csren.cc/2020/08/02/docker/","excerpt":"","text":"DockerDocker 是什么 简单介绍 安装 Docker 使用脚本安装 curl -fsSL https://get.docker.com | VERSION=19.03.1 bash -s docker --mirror Aliyun VERSION=19.03.1 安装指定版本，不指定为最新版 --mirror Aliyun 使用阿里云镜像源加速 建立 docker 组 12sudo groupadd dockersudo usermod -aG docker $USER 启动 Docker CE 12sudo systemctl enable dockersudo systemctl start docker 退出当前终端并注销重新登录 配置镜像加速 12345678sudo mkdir -p &#x2F;etc&#x2F;dockersudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;&#123; &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;]&#125;EOFsudo systemctl daemon-reloadsudo systemctl restart docker 简单命令 官方文档 获取镜像: docker pull &lt;image&gt;[:&lt;tag&gt;] example: docker pull mongo:3.6 tag 为空，会默认为 latest ，即最新版本 运行容器: docker run [-p [host_ip]:&lt;host_port&gt;:&lt;container_port&gt;] [-v [host_folder:]&lt;container_folder&gt;] [-d] [--rm] [--name &lt;container_name&gt;] &lt;image&gt;[:&lt;tag&gt;] example: docker run -p 27017:27017 -d --rm --name my_mongo mongo:3.6 -p 为主机端口和容器端口的映射 -v 为挂载主机目录到容器 -d 后台运行容器 –rm 关闭容器后自动删除 进入到容器: docker exec -it command example: docker exec -it my_mongo bash 删除镜像: docker rmi &lt;image&gt;[:&lt;tag&gt;] 删除 TAG 为 none 的镜像: docker images | grep none | awk &#39;{print $3}&#39; | xargs docker rmi 保存镜像: docker save &lt;image&gt;[:&lt;tag&gt;] -o filename 压缩保存：docker save &lt;image&gt;[:&lt;tag&gt;] | gzip &gt; filename 导入镜像: docker load -i filename 批量导入镜像: ls -1 *.tar.gz | xargs --no-run-if-empty -L 1 docker load -i 镜像迁移到另一个机器: docker save &lt;image&gt;[:&lt;tag&gt;] | bzip2 | pv | ssh &lt;username&gt;@&lt;hostname&gt; &#39;cat | docker load&#39; 私有仓库登录: docker login 出现错误：Error response from daemon: Get https://your host/v2/: x509: cannot validate certificate for your host because it doesn&#39;t contain any IP SANs 解决方法: 在 /etc/docker/daemon.json(没有此文件自行新建) 添加123&#123; \"insecure-registries\" : [ \"your docker hub host\" ]&#125; 然后重启 docker 12sudo systemctl daemon-reloadsudo systemctl restart docker Dockerfile 官方文档 注意： 构建过程中优先执行结果不经常变更的内容（例如 安装系统依赖和Python第三方包） Dockerfile 中的每一条命令都会生个可读层 layer ，命令尽量合成一个一并执行 能写到 Docker compose file 中的一些配置，就写到 Docker compose file 里面 (比如 环境变量) 尽量减少镜像大小（1.安装依赖后清除缓存和下载的安装包，2.删除不需要的文件，中间生成文件，等等） 纯粹的数据卷容器，可以是关闭状态，只要有一个容器挂载了数据卷，数据就会一直存在 FROM &lt;image&gt;[:&lt;tag&gt;] [AS &lt;name&gt;] &lt;image&gt;[:&lt;tag&gt;] 以 image 作为基底构建镜像，tag 为空，默认为 latest [AS &lt;name&gt;] 添加构建别名，如果 Dockerfile 中有多个 FROM 即可添加别名，构建时使用 --target 参数可以指定构建哪一个 ENTRYPOINT 和 CMD 建议使用 exec 格式 多个 .dockerignore 文件 Link Docker 版本 19.03+ export DOCKER_BUILDKIT=1 dockerignore 文件名为 &lt; Dockerfile name&gt;.dockerignore Docker compose-file 官方文档 注意： 使用 Docker compose file 可以使用 -f 同时指定多个文件，同一个服务的不同配置会自动合并，而相同的配置将会出错 depends_on 设置容器的依赖关系，控制容器的启动顺序","categories":[],"tags":[]},{"title":"docker_for_windows","slug":"docker_for_windows","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/docker_for_windows/","link":"","permalink":"https://csren.cc/2020/08/02/docker_for_windows/","excerpt":"","text":"Docker for windows with VirtualBox安装 Docker 和 Virtualbox 使用安装包安装 Docker 官网地址 Virtualbox 官网地址 使用 Chocolatey 安装 chocolatey 地址 命令: choco install docker-desktop virtualbox 创建 Virtual Machine 打开 PowerShell 输入 docker-machine create -d virtualbox default 如果使用 vmwareworkstation 驱动，请到 Github 下载，将文件放置在 C:\\ProgramData\\DockerDesktop\\version-bin` 安装 Vmware Workstation Pro 15 docker-machine create -d vmwareworkstation default 设置环境变量（选其一）设置系统环境变量 打开 windows 环境变量设置，此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量 分别新建三个环境变量为 DOCKER_HOST 值：使用 docker-machine ls 获得 tcp://192.168.99.102:2376 DOCKER_TLS_VERIFY 值：1 DOCKER_CERT_PATH 值：%USERPROFILE%/.docker/machine/machines/default 设置 终端环境变量 docker-machine.exe env default | Invoke-Expression code 测试 打开 PowerShell 输入 docker run hello-world 无错误即成功 设置共享路径 打开 VirtualBox 设置共享文件夹 如果不设置在启动 docker 容器时不能挂载文件 设置端口映射 打开 VirtualBox 网络设置，进行端口映射设置","categories":[],"tags":[]},{"title":"git","slug":"git","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/git/","link":"","permalink":"https://csren.cc/2020/08/02/git/","excerpt":"","text":"Commit Message 格式目前规范使用较多的是 Angular 团队的规范, 它的 message 格式如下: 12345&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;&lt;BLANK LINE&gt;&lt;body&gt;&lt;BLANK LINE&gt;&lt;footer&gt; 标题行: 必填, 描述主要修改类型和内容主题内容: 描述为什么修改, 做了什么样的修改, 以及开发的思路等等页脚注释: 放 Breaking Changes 或 Closed Issues 分别由如下部分构成: type: commit 的类型 feat: 新特性 fix: 修改问题 refactor: 代码重构 docs: 文档修改 style: 代码格式修改, 注意不是 css 修改 test: 测试用例修改 chore: 其他修改, 比如构建流程, 依赖管理 scope: commit 影响的范围, 比如: view, model, utils, build… subject: commit 的概述, 建议符合 50/72 formatting body: commit 具体修改内容, 可以分为多行, 建议符合 50/72 formatting footer: 一些备注, 通常是 BREAKING CHANGE 或修复的 bug 的链接 Git 分支规范分支构成 master 主分支 dev 开发分支 分支操作 新增功能，或者修复bug时，从以上分支或者其他主要分支拉取并新建分支格式为： &lt;username&gt;/&lt;fix | feat&gt;_&lt;something&gt; 例如：tuo/feat_vcode (新增验证码功能) 每次合并代码之前使用 git rebase &lt;a branch&gt;，此分支为将要合并进去的分支 详细操作请看 官方文档 如有冲突请仔细检查并解决冲突 此操作可保持提交记录整洁 Git 命令官方文档 git commit --amend 修改最近一次提交记录，包括commit message 、提交的内容(需将已修改的文件加入暂存区) git stash 保存工作区，增加参数 pop 可恢复 git rebase -i &lt;CommitHash&gt; 修改历史提交记录，根据提示具体操作 git branch -d &lt;BranchName&gt; 删除本地分支 git branch --remotes -d origin/&lt;BranchName&gt; 已删除远程跟踪分支 git push origin --delete &lt;BranchName&gt; 删除远程分支 git remote prune origin 从本地版本库中去除远程已经删除的分支 学习 Git 命令 Learn Git","categories":[],"tags":[]},{"title":"mirror","slug":"mirror","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/mirror/","link":"","permalink":"https://csren.cc/2020/08/02/mirror/","excerpt":"","text":"一键更新镜像源 wget -qO- git.io/superupdate.sh | bash -s aliyun","categories":[],"tags":[]},{"title":"nginx","slug":"nginx","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/nginx/","link":"","permalink":"https://csren.cc/2020/08/02/nginx/","excerpt":"","text":"路由","categories":[],"tags":[]},{"title":"python","slug":"python","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/python/","link":"","permalink":"https://csren.cc/2020/08/02/python/","excerpt":"","text":"安装 Python 推荐使用 Miniconda 官方 清华源知识点 解包压包","categories":[],"tags":[]},{"title":"rsync","slug":"rsync","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/rsync/","link":"","permalink":"https://csren.cc/2020/08/02/rsync/","excerpt":"","text":"command rsync -azvhP --delete --exclude .git/ &lt;SRC&gt; &lt;host&gt;:&lt;DST&gt; --delete 删除那些 DST 中 SRC 没有的文件 --exclude 指定排除不需要传输的文件模式","categories":[],"tags":[]},{"title":"swapfile","slug":"swapfile","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/swapfile/","link":"","permalink":"https://csren.cc/2020/08/02/swapfile/","excerpt":"","text":"swapfile 交换文件 大小修改 查看 swapfile 详情：sudo swapon -s 禁用：sudo swapoff /swapfile 删除：sudo rm /swapfile 新建:：sudo dd if=/dev/zero of=/swapfile bs=1G count=8 设置权限：sudo chmod 600 /swapfile 设置格式化：sudo mkswap /swapfile 启用：sudo swapon /swapfile /etc/fstab 增加一行 /swapfile swap swap defaults 0 0 文件可相应改为分区","categories":[],"tags":[]},{"title":"tar","slug":"tar","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/tar/","link":"","permalink":"https://csren.cc/2020/08/02/tar/","excerpt":"","text":"tar命令详解 这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。 -c: 建立压缩档案 -x：解压 -t：查看内容 -r：向压缩归档文件末尾追加文件 -u：更新原压缩包中的文件 下面的参数是根据需要在压缩或解压档案时可选的 -z：有gzip属性的 -j：有bz2属性的 -Z：有compress属性的 -v：显示所有过程 -O：将文件解开到标准输出 参数-f是必须的 -f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。 tar -cf all.tar *.jpg 这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。 tar -rf all.tar *.gif 这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。 tar -uf all.tar logo.gif 这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。 tar -tf all.tar 这条命令是列出all.tar包中所有文件，-t是列出文件的意思 tar -xf all.tar 这条命令是解出all.tar包中所有文件，-x是解开的意思 查看 tar -tf aaa.tar.gz 在不解压的情况下查看压缩包的内容 压缩 tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg tar –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2 tar –cZf jpg.tar.Z *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z 解压 tar –xvf file.tar //解压 tar包 tar -xzvf file.tar.gz //解压tar.gz tar -xjvf file.tar.bz2 //解压 tar.bz2tar –xZvf file.tar.Z //解压tar.Z 总结 *.tar 用 tar –xvf 解压 *.gz 用 gzip -d或者gunzip 解压 *.tar.gz 和 *.tgz 用 tar –xzf 解压 *.bz2 用 bzip2 -d 或者用bunzip2 解压 *.tar.bz2 用tar –xjf 解压 *.Z 用 uncompress 解压 *.tar.Z 用tar –xZf 解压","categories":[],"tags":[]},{"title":"vpn","slug":"vpn","date":"2020-08-02T08:59:45.942Z","updated":"2020-08-02T08:59:45.942Z","comments":true,"path":"2020/08/02/vpn/","link":"","permalink":"https://csren.cc/2020/08/02/vpn/","excerpt":"","text":"Centos7 安装 PPTP 参考: 链接1 链接2 链接3 链接4 链接5 安装依赖：yum install -y ppp pptp pptp-setup 配置：pptpsetup --create vpn --server &lt;服务器&gt; --username &lt;用户名&gt; --password &lt;密码&gt; --encrypt --start MPPE加密，pptpsetup时不需要使用–encrypt 出现 `LCP: timeout sending Config-RequestsConnection terminated.` 可能是防火墙的问题 配置路由： route -n ip route replace default dev ppp0 or route add -net 192.168.1.0/24 gw 192.168.1.1 dev ppp0 OpenVPN 连接使用: openvpn --config &lt;your config&gt;.ovpn --auth-user-pass &lt;username and password in file&gt; 使用条件代理: 不从服务端拉取代理配置，配置文件加入 route-nopull 将 192.168.10.* 设置为使用OpenVPN代理，配置加入 route 192.168.10.0 255.255.255.0 vpn_gateway 将 vpn_gateway 改为 net_gateway 可排除 IP 或者网段不走 VPN","categories":[],"tags":[]}],"categories":[],"tags":[]}